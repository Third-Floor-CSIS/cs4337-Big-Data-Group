services:
  profile_mysql:
    # Always specify what version, "latest" causes issues later on
    image: mysql:9.1
    environment:
      MYSQL_USER: ${PROFILE_MYSQL_USERNAME}
      MYSQL_PASSWORD: ${PROFILE_MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${PROFILE_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${PROFILE_DB_NAME}
    networks:
      - net
    ports:
      - "${PROFILE_DB_PORT_EXTERNAL}:3306"
    volumes:
      - ./dev/database/profile:/var/lib/mysql

  profile_microservice:
    container_name: profile_microservice
    depends_on:
      - profile-mysql
    # Path to teh root dir of teh microservice (where teh Dockerfile is)
    build:
      context: ./Microservices
      dockerfile: Profile/Dockerfile
      args:
        # name of teh folder in Microservices
        SERVICE_PATH: "Profile"
    # pass in the env file to be used
    env_file: ".env"
    ports:
      # ideally it would be mapped to a more static internal port
      # - "${PROFILE_MICROSERVICE_PORT}:8080"
      - "${PROFILE_MICROSERVICE_PORT}:${PROFILE_MICROSERVICE_PORT}"
    networks:
      - net
    environment:
      SERVICE_REGISTRY_IP: eureka-service
      PROFILE_DB_IP: profile_mysql

  auth_mysql:
    # Always specify what version, "latest" causes issues later on
    image: mysql:9.1
    environment:
      MYSQL_PASSWORD: ${AUTH_MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${AUTH_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${AUTH_DB_NAME}
    networks:
      - net
    ports:
      - "${AUTH_DOCKER_DB_PORT}:3306"
    volumes:
      - ./dev/database/auth:/var/lib/mysql

  eureka-service:
    build:
      context: ./Microservices/service-registry
      dockerfile: Dockerfile
    env_file: ".env"
    environment:
      SERVICE_REGISTRY_IP: eureka-service
    networks:
      - net
    ports:
      - "${PORT_SERVICE_REGISTRY}:8761"

  gateway:
    build:
      context: ./Microservices/api-gateway
      dockerfile: Dockerfile
    env_file: ".env"
    environment:
      SERVICE_REGISTRY_IP: eureka-service
    networks:
      - net
    ports:
      - "${GATEWAY_PORT}:8080"

  auth_service:
    build:
      context: ./Microservices/IdentityMicroservice
      dockerfile: Dockerfile
    env_file: ".env"
    environment:
      AUTH_MYSQL_PASSWORD: ${AUTH_MYSQL_ROOT_PASSWORD}
      AUTH_DB_IP: auth_mysql
      SERVICE_REGISTRY_IP: eureka-service
    depends_on:
      - auth_mysql
    networks:
      - net
    ports:
      - "${AUTH_MICROSERVICE_PORT}:8082"

networks:
  net:
    driver: bridge